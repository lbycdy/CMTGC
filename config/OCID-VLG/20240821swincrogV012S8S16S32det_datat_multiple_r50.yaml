DATA:
  dataset: OCID-VLG
  root_path: ../datasets/OCID-VLG
  train_split: train
  val_split: val
  rgb_type: 1
  mask_type: 1
MODEL:
    RESNETS:
      STEM_FUNC: "StemWithFixedBatchNorm"
      BACKBONE_OUT_CHANNELS: 256
    META_ARCHITECTURE: "GeneralizedRCNN"
    WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
    RPN_ONLY: True
    FCOS_ON: True
    BACKBONE:
      CONV_BODY: "R-50-FPN-RETINANET"
    RETINANET:
      USE_C5: False # FCOS uses P5 instead of C5
      NUM_GROUPS:
    FCOS:
      # normalizing the regression targets with FPN strides
      NORM_REG_TARGETS: True
      # positioning centerness on the regress branch.
      # Please refer to https://github.com/tianzhi0549/FCOS/issues/89#issuecomment-516877042
      CENTERNESS_ON_REG: True
      # using center sampling and GIoU.
      # Please refer to https://github.com/yqyao/FCOS_PLUS
      CENTER_SAMPLING_RADIUS: 1.5
      IOU_LOSS_TYPE: "giou"
TRAIN:
  # Base Arch
  clip_pretrain: pretrain/RN50.pt
  version: multiple
  input_size: 416
  word_len: 17
  word_dim: 1024
  vis_dim: 512
  fpn_in: [512, 1024, 1024]
  fpn_out: [256, 512, 1024]
  sync_bn: True
  # Decoder
  num_layers: 3
  num_head: 8
  dim_ffn: 2048
  dropout: 0.1
  intermediate: False
  # Training Setting
  workers: 2  # data loader workers
  workers_val: 2
  epochs: 50
  milestones: [35]
  start_epoch: 0
  batch_size: 4  # batch size for training
  batch_size_val: 4  # batch size for validation during training, memory and speed tradeoff
  base_lr: 0.0001
  lr_decay: 0.1
  lr_multi: 0.1
  weight_decay: 0.
  max_norm: 0.
  manual_seed: 0
  print_freq: 100
  # Resume & Save
  exp_name: CROG_multiple_R50
  output_folder: exp/OCID-VLG_multiple
  save_freq: 1
  weight:  # path to initial weight (default: none)
  resume:  ''
  evaluate: True  # evaluate on validation set, extra gpu memory needed and small batch_size_val is recommend
  # Ablation study
  use_contrastive: True
  use_pretrained_clip: True
  use_grasp_masks: True
  use_twin_clip: True
Distributed:
  dist_url: tcp://localhost:3641
  dist_backend: 'nccl'
  multiprocessing_distributed: True
  world_size: 1
  rank: 0
TEST:
  test_split: val-test
  visualize: False

# FCOS with improvements
DATASETS:
  TRAIN: ("coco_2017_train", "coco_2017_val")
  TEST: ("val",)
INPUT:
  MIN_SIZE_TRAIN: (800,)
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MAX_SIZE_TEST: 1333
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.01
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000
  IMS_PER_BATCH: 1
  WARMUP_METHOD: "constant"